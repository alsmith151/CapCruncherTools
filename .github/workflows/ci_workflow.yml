name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: 2014
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist
      - name: Install dependencies and test
        shell: bash
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install git+https://github.com/sims-lab/CapCruncher.git@fix-polars-errors
          pip install pybedtools pysam ujson tqdm pyarrow --no-deps
          pip install dist/*.whl
          pip install pytest
          pytest

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [macOS-14, macOS-14-arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist
      - name: Install dependencies and test
        if: matrix.target == 'macOS-14-arm64'
        shell: bash
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install git+https://github.com/sims-lab/CapCruncher.git@fix-polars-errors
          pip install pybedtools pysam ujson tqdm pyarrow --no-deps
          pip install dist/*.whl
          pip install pytest
          pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-src
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: artifacts
          merge-multiple: true  # Ensures all artifacts are placed in a single directory

      - name: Move all wheel files to dist
        run: |
          mkdir -p dist
          find artifacts -type f -exec mv {} dist/ \;

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing dist/*
